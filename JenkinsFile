pipeline {
    agent any
    environment {
        ACR_REGISTRY = "petclinicdylan.azurecr.io"
        IMAGE_NAME = "spring-petclinic"
        SONARQUBE = "SonarQube"
    }
    stages {
        stage('Build JAR') {
            steps {
                bat 'mvn clean package'
            }
        }
        
  	stage('SonarQube Analysis') {
    		def mvn = tool 'Default Maven';
    		withSonarQubeEnv() {
      		sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=dylan-petclinic -Dsonar.projectName='dylan-petclinic'"
    			}
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'acr-credentials',
                        usernameVariable: 'ACR_USER',
                        passwordVariable: 'ACR_PASSWORD'
                    )]) {
                        bat """
                            docker login ${ACR_REGISTRY} -u ${ACR_USER} -p ${ACR_PASSWORD}
                            docker build -t ${ACR_REGISTRY}/${IMAGE_NAME}:latest .
                            docker push ${ACR_REGISTRY}/${IMAGE_NAME}:latest
                        """
                    }
                }
            }
        }
    }
}
